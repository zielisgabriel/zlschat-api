name: ZlsChat API | AWS ECR and APP RUNNER

on:
    push:
        branches: [main]
    pull_request:
        branches: [main]
jobs:
    build:
        runs-on: ubuntu-latest
        environment: AWS_CREDENTIALS
        permissions:
            id-token: write
            contents: read

        steps:
          - name: Checkout code
            uses: actions/checkout@v4

          - name: Configure AWS Credentials
            uses: aws-actions/configure-aws-credentials@v4
            with:
                role-to-assume: "${{ secrets.ECR_ARN_ROLE }}"
                aws-region: us-east-1

          - name: Login to Amazon ECR
            id: login-ecr
            uses: aws-actions/amazon-ecr-login@v1

          - name: Generate Tag
            id: generate-tag
            run: |
                SHA=$(echo $GITHUB_SHA | head -c 7)
                echo "sha=$SHA" >> $GITHUB_OUTPUT

          - name: Build, tag, and push image to Amazon ECR
            id: build-image
            env:
                ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
                ECR_REPOSITORY: zlschat_ecr_repository
                IMAGE_TAG: ${{ steps.generate-tag.outputs.sha }}
            run: |
                docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f ./Dockerfile .
                docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
                IMAGE=$(echo $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG)
                echo "image=$IMAGE" >> $GITHUB_OUTPUT

          - name: Deploy to AWS App Runner
            id: deploy-apprunner
            uses: awslabs/amazon-app-runner-deploy@main
            with:
                service: zlschat-api
                image: "${{ steps.build-image.outputs.image }}"
                access-role-arn: "${{ secrets.APP_RUNNER_ARN_ROLE }}"
                region: us-east-1
                cpu: 1
                memory: 2
                port: 8080